<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.user.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.example.user.vo.GoodsVO">
    <!--@mbg.generated-->
    <!--@Table goods-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="buyout" jdbcType="INTEGER" property="buyout" />
    <result column="buyoutPrice" jdbcType="FLOAT" property="buyoutprice" />
    <result column="goodsPicture" jdbcType="VARCHAR" property="goodspicture" />
    <collection property="goodsDetailVOList" ofType="com.example.user.vo.GoodsDetailVO">
      <id column="gdid" jdbcType="INTEGER" property="id" />
      <result column="address" jdbcType="VARCHAR" property="address" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, category, brand, goodsName, description, price, buyout, buyoutPrice, goodsPicture
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    SELECT
    g.id, g.category, g.brand, g.goodsName, g.description, g.price, g.buyout, g.buyoutPrice, g.goodsPicture, gd.address , gd.id gdid
    FROM
    goods g
    JOIN goodsdetail gd ON g.id = gd.goodsId
    WHERE
    g.id = #{id,jdbcType=INTEGER} and g.state = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    insert into goods (id, category, brand,
      goodsName, description, price,
      buyout, buyoutPrice, goodsPicture,
      favorites, `state`)
    values (#{id,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR},
      #{goodsname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=FLOAT},
      #{buyout,jdbcType=INTEGER}, #{buyoutprice,jdbcType=FLOAT}, #{goodspicture,jdbcType=VARCHAR},
      #{favorites,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="buyout != null">
        buyout,
      </if>
      <if test="buyoutprice != null">
        buyoutPrice,
      </if>
      <if test="goodspicture != null">
        goodsPicture,
      </if>
      <if test="favorites != null">
        favorites,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=FLOAT},
      </if>
      <if test="buyout != null">
        #{buyout,jdbcType=INTEGER},
      </if>
      <if test="buyoutprice != null">
        #{buyoutprice,jdbcType=FLOAT},
      </if>
      <if test="goodspicture != null">
        #{goodspicture,jdbcType=VARCHAR},
      </if>
      <if test="favorites != null">
        #{favorites,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    update goods
    <set>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=FLOAT},
      </if>
      <if test="buyout != null">
        buyout = #{buyout,jdbcType=INTEGER},
      </if>
      <if test="buyoutprice != null">
        buyoutPrice = #{buyoutprice,jdbcType=FLOAT},
      </if>
      <if test="goodspicture != null">
        goodsPicture = #{goodspicture,jdbcType=VARCHAR},
      </if>
      <if test="favorites != null">
        favorites = #{favorites,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    update goods
    set category = #{category,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=FLOAT},
      buyout = #{buyout,jdbcType=INTEGER},
      buyoutPrice = #{buyoutprice,jdbcType=FLOAT},
      goodsPicture = #{goodspicture,jdbcType=VARCHAR},
      favorites = #{favorites,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
