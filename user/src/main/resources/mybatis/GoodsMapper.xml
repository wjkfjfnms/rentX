<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.user.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.example.user.vo.GoodsVO">
    <!--@mbg.generated-->
    <!--@Table goods-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="userId" jdbcType="BIGINT" property="userId" />
    <result column="categoryId" jdbcType="INTEGER" property="categoryId" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="buyout" jdbcType="INTEGER" property="buyout" />
    <result column="buyoutPrice" jdbcType="FLOAT" property="buyoutprice" />
    <result column="goodsPicture" jdbcType="VARCHAR" property="goodspicture" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="uploadTime" jdbcType="DATE" property="uploadTime" />
    <collection property="goodsDetailVOList" ofType="com.example.user.vo.GoodsDetailVO">
      <id column="gdid" jdbcType="INTEGER" property="id" />
      <result column="address" jdbcType="VARCHAR" property="address" />
    </collection>
    <collection property="qualityVOList" ofType="com.example.user.vo.QualityVO">
      <id column="qid" jdbcType="INTEGER" property="id" />
      <result column="quality" jdbcType="VARCHAR" property="quality" />
    </collection>
    <collection property="comboVOList" ofType="com.example.user.vo.ComboVO">
      <id column="cid" jdbcType="INTEGER" property="id" />
      <result column="comboName" jdbcType="VARCHAR" property="combo" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, categoryId, brand, goodsName, description, price, buyout, buyoutPrice, goodsPicture, state
  </sql>

<!--  根据主键查询商品信息-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    SELECT
    g.id, g.userId, g.categoryId, g.brand, g.goodsName, g.description, g.price, g.buyout, g.buyoutPrice, g.goodsPicture,g.state,g.uploadTime,
    gd.address , gd.id gdid, q.id qid,q.quality,c.id cid,c.comboName
    FROM
    goods g
    JOIN goodsdetail gd ON g.id = gd.goodsId
    JOIN quality q ON g.id = q.goodsId
    JOIN combo c ON g.id = c.goodsId
    WHERE
    g.id = #{id,jdbcType=INTEGER}
  </select>

  <resultMap id="PageResultMap" type="com.example.user.po.Goods">
    <!--@mbg.generated-->
    <!--@Table goods-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="categoryId" jdbcType="INTEGER" property="categoryId" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="buyout" jdbcType="INTEGER" property="buyout" />
    <result column="buyoutPrice" jdbcType="FLOAT" property="buyoutprice" />
    <result column="goodsPicture" jdbcType="VARCHAR" property="goodspicture" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>


<!--  根据用户id查询-->
  <select id="findMyGoods" resultMap="PageResultMap">
    select *
    from goods
    where userId = #{arg0,jdbcType=BIGINT}
  </select>

<!--根据商品名称查询-->
  <select id="selectByGoodsName" resultMap="BaseResultMap" parameterType="com.example.user.dto.UploadGoodsDTO">
    select *
    from goods
    where goodsName = #{goodsname,jdbcType=VARCHAR} and userId = #{id,jdbcType=BIGINT} and state = 0
  </select>

<!--最近上新-->
  <select id="RecentlyNew" resultMap="PageResultMap">
    SELECT g.*
    FROM goods g
                 JOIN (
            SELECT categoryId, MAX(uploadTime) AS latest_upload_time
            FROM goods
            WHERE state = 0
            GROUP BY categoryId
            ) latest ON g.categoryId = latest.categoryId AND g.uploadTime = latest.latest_upload_time
    ORDER BY g.categoryId, g.uploadTime DESC
    LIMIT 5
  </select>

<!--  热销推荐-->
  <select id="hostGoods" resultMap="PageResultMap">
    select *
    from goods
    where state = '在售'
    ORDER BY favorites DESC
    LIMIT 8
  </select>

<!--  模糊查询商品-->
  <select id="searchGoods" resultMap="PageResultMap" parameterType="String">
    select *
    from goods
    where brand like CONCAT('%', #{keyword}, '%')
    or goodsName like CONCAT('%', #{keyword}, '%')
    or description like CONCAT('%', #{keyword}, '%')
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    insert into goods (id, categoryId, brand,
      goodsName, description, price,
      buyout, buyoutPrice, goodsPicture,
      favorites, `state`)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR},
      #{goodsname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=FLOAT},
      #{buyout,jdbcType=INTEGER}, #{buyoutprice,jdbcType=FLOAT}, #{goodspicture,jdbcType=VARCHAR},
      #{favorites,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>


<!--  上架商品-->
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.user.dto.UploadGoodsDTO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="categoryId != null">
        categoryId,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="buyout != null">
        buyout,
      </if>
      <if test="buyoutprice != null">
        buyoutPrice,
      </if>
      <if test="goodspicture != null">
        goodsPicture,
      </if>
        state
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=FLOAT},
      </if>
      <if test="buyout != null">
        #{buyout,jdbcType=INTEGER},
      </if>
      <if test="buyoutprice != null">
        #{buyoutprice,jdbcType=FLOAT},
      </if>
      <if test="goodspicture != null">
        #{goodspicture,jdbcType=VARCHAR},
      </if>
      '在售'
    </trim>
  </insert>


  <!--  下架商品-->
  <update id="updateState" parameterType="com.example.user.dto.UpdateStateDTO">
    update goods
    set state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  收藏量+1-->
  <update id="updateFavorites" parameterType="integer">
    update goods
    set favorites = #{shoucang,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  获取收藏量-->
  <select id="getFavorites" resultMap="PageResultMap">
    select favorites
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>


  <update id="updateByPrimaryKeySelective" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="com.example.user.dto.UpdateGoodsDTO">
    <!--@mbg.generated-->
    update goods
    <set>
      <if test="categoryId != null">
        categoryId = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=FLOAT},
      </if>
      <if test="buyout != null">
        buyout = #{buyout,jdbcType=INTEGER},
      </if>
      <if test="buyoutprice != null">
        buyoutPrice = #{buyoutprice,jdbcType=FLOAT},
      </if>
      <if test="goodspicture != null">
        goodsPicture = #{goodspicture,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.example.user.po.Goods">
    <!--@mbg.generated-->
    update goods
    set categoryId = #{categoryId,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=FLOAT},
      buyout = #{buyout,jdbcType=INTEGER},
      buyoutPrice = #{buyoutprice,jdbcType=FLOAT},
      goodsPicture = #{goodspicture,jdbcType=VARCHAR},
      favorites = #{favorites,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
